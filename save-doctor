  saveNewDoctor(newDoctor: Doctor): Promise<string> {
    return new Promise((resolve, reject) => {
      // Check for existing doctor with the same email
      this.firestore.collection('doctors_db', ref => 
        ref.where('email', '==', newDoctor.email)
      ).get().pipe(take(1)).subscribe(emailQuery => {
        // Check for existing doctor with the same phone number
        this.firestore.collection('doctors_db', ref => 
          ref.where('phone', '==', newDoctor.phone)
        ).get().pipe(take(1)).subscribe(phoneQuery => {
          // Check for existing doctor with the same identity number
          this.firestore.collection('doctors_db', ref => 
            ref.where('identity_number', '==', newDoctor.identity_number)
          ).get().pipe(take(1)).subscribe(identityQuery => {
            // If any query returns documents, a duplicate exists
            if (!emailQuery.empty || !phoneQuery.empty || !identityQuery.empty) {
              console.log('A doctor with the same email, phone number, or identity number already exists.');
              reject('failed to save: duplicate email, phone number, or identity number');
            } else {
              // If no duplicates, proceed to add the new doctor
              this.firestore.collection('doctors_db').add(newDoctor.toPlainObject())
                .then(() => {
                  this.firestore.collection('doctors_db', ref => 
                    ref.where('email', '==', newDoctor.email)
                       .where('phone', '==', newDoctor.phone) // Replace with the actual phone number
                  ).get().pipe(take(1)).subscribe((emailQuery: any) => {
                    if (!emailQuery.empty) {
                      let savedDoctor: Doctor = emailQuery.docs[0].data();
                      const docRef = emailQuery.docs[0].ref.id;
                      savedDoctor.id = docRef;
                      this.firestore.collection('doctors_db').doc(docRef).update(savedDoctor);
            
                      console.log('New doctor added successfully');
                      resolve(docRef);
                    } else {
                      console.log('No doctor found with this email and phone number.');
                    }
                  });
                })
                .catch(error => {
                  console.error('Error adding new doctor: ', error);
                  resolve('failed to save');
                });
            }
          });
        });
      });
    });
  }


